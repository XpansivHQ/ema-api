components:
  parameters:
    AccountID:
      in: path
      name: accountId
      required: true
      schema:
        type: integer
  responses:
    '400':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
      description: Bad request data
    '401':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedError'
      description: Bad request data
    '500':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
      description: Bad request data
    GeneralResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralResponse'
      description: Standard response
  schemas:
    Account:
      properties:
        id:
          type: string
      type: object
    AdministrativeArea1:
      description: This is aligned with google map API. see https://developers.google.com/maps/documentation/places/web-service/search-find-place
      properties:
        code:
          title: 'states for US or provinces for CA. Examples: CA, CO, WA for US;
            MB, SK for CA'
          type: string
        countryCode:
          title: for example US, CA
          type: string
      type: object
    Any:
      properties:
        typeUrl:
          type: string
        value:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    CarbonProject:
      properties:
        accountHolderName:
          type: string
        additionalProjectTypes:
          items:
            format: int64
            type: integer
          type: array
        annualAverageOffsetQty:
          type: number
        baselineMethodology:
          type: string
        city:
          type: string
        country:
          type: string
        creditType:
          type: string
        creditingPeriod:
          type: string
        description:
          type: string
        location:
          properties:
            latitude:
              type: string
            longitude:
              type: string
          type: object
        name:
          type: string
        projectParticipants:
          items:
            type: string
          type: array
        projectType:
          format: int64
          type: integer
        province:
          type: string
        registryId:
          type: string
        scale:
          type: string
        status:
          type: string
        validator:
          type: string
        verifier:
          type: string
        website:
          type: string
      required:
      - name
      - description
      title: Carbon project entity
      type: object
    DateRange:
      properties:
        end:
          format: date
          title: inclusive
          type: string
        start:
          format: date
          title: inclusive
          type: string
      type: object
    EnableDisableRegistryCredential:
      properties:
        emaAccountIdentifier:
          type: string
        id:
          type: string
        registry:
          type: string
      title: Request to enable/disable registry credential
      type: object
    Entitlement:
      properties:
        id:
          description: Entitlement id
          format: int64
          type: integer
        resourceId:
          description: Resource id
          format: int64
          type: integer
        resourceType:
          description: Resource type
          type: string
        roleId:
          description: Role id
          format: int64
          type: integer
      type: object
    ErcotJwtCacheItem:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    FeatureFlag:
      properties:
        enabled:
          type: boolean
        id:
          type: string
        name:
          title: optional name
          type: string
      type: object
    FeatureFlagsList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/FeatureFlag'
          type: array
      type: object
    GeneralError:
      properties:
        code:
          type: string
        message:
          type: string
    GeneralResponse:
      properties:
        code:
          type: string
        message:
          type: string
    GroupEntitlement:
      properties:
        code:
          description: Group Code
          type: string
        entitlements:
          description: "Group\xB4s entitlements"
          items:
            $ref: '#/components/schemas/Entitlement'
          type: array
        id:
          description: Group id
          format: int64
          type: integer
        name:
          description: Group name
          type: string
      type: object
    KVPair:
      properties:
        k:
          type: string
        v:
          type: string
      type: object
    ListSummary:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      required:
      - total
      - pageSize
      - pageNumber
      type: object
    NotAuthorizedError:
      properties:
        code:
          type: string
        message:
          type: string
    Pagination:
      properties:
        offset:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - pageSize
      - pageNum
      type: object
    ParameterInfo:
      properties:
        description:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    PjmDownloadCredentials:
      properties:
        accountName:
          type: string
        emAccountId:
          type: string
        registry:
          type: string
        registryAccountId:
          type: string
        registryAccountName:
          type: string
        type:
          type: string
        username:
          type: string
      title: Registry credentials used for PJM download operations
      type: object
    PortfolioRequest:
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        programName:
          type: string
        text:
          type: string
      type: object
    RecCertificateType:
      enum:
      - GREEN_E_CLIMATE
      - GREEN_E_ENERGY_ELIGIBLE
      - ECOLOGO_CERTIFIED
      - LOW_IMPACT_HYDRO_INSTITUTE_CERTIFIED
      - SMUD_ELIGIBLE
      - US_EPA_GPP_ELIGIBLE
      - EFEC_ELIGIBLE
      - IOWA_VOLUNTARY_GREEN
      type: string
    RecEligibilityInformation:
      properties:
        fuelSource:
          type: string
        fuelType:
          type: string
        recGeneratorCertifications:
          items:
            $ref: '#/components/schemas/RecGeneratorCertificate'
          type: array
        recStateCertifications:
          items:
            $ref: '#/components/schemas/RecStateCertificate'
          type: array
      required:
      - type
      - value
      title: REC Eligibility aggregation
      type: object
    RecGenerator:
      properties:
        commencedDt:
          format: date-time
          type: string
        contactInfo:
          type: string
        controlArea:
          type: string
        country:
          type: string
        countyName:
          type: string
        eligibilities:
          items:
            $ref: '#/components/schemas/RecEligibilityInformation'
          type: array
        facNoncompetitiveCertData:
          type: string
        multiFuelInd:
          type: boolean
        name:
          type: string
        nameplateCapacity:
          format: double
          type: number
        ownerName:
          type: string
        ownershipType:
          type: string
        parentCompanyName:
          type: string
        powerCompanyCode:
          type: string
        powerCompanyName:
          type: string
        qualifyingFacilityInd:
          type: boolean
        recProgram:
          $ref: '#/components/schemas/RecProgram'
        registryAcctHolderName:
          type: string
        registryAssignedId:
          type: string
        siteCode:
          type: string
        stateProvince:
          type: string
        status:
          $ref: '#/components/schemas/RecGeneratorStatus'
        unitName:
          type: string
        upn:
          type: string
      required:
      - recProgram
      - registryAssignedId
      title: REC Generator
      type: object
    RecGeneratorCertificate:
      description: Object to hold full generator certification information - type
        of certificate, effective date, expiration, extendable with other information
      properties:
        effectiveDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/RecCertificateType'
      type: object
    RecGeneratorStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    RecGeneratorsResponse:
      properties:
        generators:
          items:
            $ref: '#/components/schemas/RecGenerator'
          type: array
      required:
      - generators
      type: object
    RecPosition:
      type: object
    RecProgram:
      enum:
      - NEPOOL
      - MRETS
      - WREGIS
      - NAR
      - ERCOT
      - PJM
      - MIRECS
      - NCRETS
      - NYGATS
      type: string
    RecProgramCode:
      properties:
        code:
          type: string
      type: object
    RecPrograms:
      properties:
        items:
          items:
            $ref: '#/components/schemas/RecProgramCode'
          type: array
      type: object
    RecStateCertificate:
      description: Object to hold full state certification information - type of certificate,
        extendable with other information
      properties:
        type:
          $ref: '#/components/schemas/RecStateCertificateType'
      type: object
    RecStateCertificateType:
      enum:
      - ALBERTA
      - ARIZONA
      - BRITISH_COLUMBIA
      - CALIFORNIA
      - COLORADO
      - NEW_MEXICO
      - NEVADA
      - OREGON
      - TEXAS
      - UTAH
      - WASHINGTON
      - CONNECTICUT_CEO
      - CONNECTICUT_CLASS_I
      - CONNECTICUT_CLASS_II
      - CONNECTICUT_CLASS_III
      - ELIGIBLE_MASSACHUSETTS_NOX_ALLOWANCES
      - MA_SOLAR_CARVE-OUT_UNIT
      - MA_SOLAR_CARVE-OUT_UNIT_II
      - MA_AUCTION_SOLAR_CARVE-OUT_UNIT
      - MA_AUCTION_SOLAR_CARVE-OUT_UNIT_II
      - MASSACHUSETTS_APS_ALTERNATIVE_GENERATION_UNIT
      - MASSACHUSETTS_RPS_CLASS_I_RENEWABLE_GENERATION_UNIT
      - MASSACHUSETTS_RPS_CLASS_II_RENEWABLE_GENERATION_UNIT
      - MASSACHUSETTS_RPS_CLASS_II_WASTE_ENERGY_GENERATION_UNIT
      - ME_COMMUNITY-BASED_RENEW_ENERGY
      - ME_TREC
      - MAINE_CLASS_I
      - MAINE_CLASS_IA
      - MAINE_CLASS_II
      - MAINE_CO2_NETTING
      - MAINE_REN/EFF_ENERGY_SOURCE
      - NEW_HAMPSHIRE_CLASS_I
      - NEW_HAMPSHIRE_CLASS_II
      - NEW_HAMPSHIRE_CLASS_III
      - NEW_HAMPSHIRE_CLASS_IV
      - NH_CLASS_I_THERMAL
      - RHODE_ISLAND_EXISTING_RENEWABLE_RESOURCE
      - RHODE_ISLAND_NEW_RENEWABLE_RESOURCE
      - IOWA
      - ILLINOIS
      - ILLINOIS_SOLAR
      - ILLINOIS_ARES
      - MANITOBA
      - MINNESOTA
      - MONTANA
      - NORTH_DAKOTA
      - SOUTH_DAKOTA
      - MICHIGAN
      - NEW_JERSEY
      - MARYLAND
      - DISTRICT_OF_COLUMBIA
      - PENNSYLVANIA
      - DELAWARE
      - OHIO
      - WISCONSIN_RPS
      - WISCONSIN_RRC
      - IOWA_AEP
      - MINNESOTA_CBED
      - NEWJERSEY_CLASS1
      - NEWJERSEY_CLASS2
      - NEWJERSEY_SOLAR
      - NEWJERSEY_TRANSITION
      - PENNSYLVANIA_CLASS1
      - PENNSYLVANIA_CLASS2
      - PENNSYLVANIA_SOLAR
      - MARYLAND_TIER1
      - MARYLAND_TIER2
      - MARYLAND_SOLAR
      - DC_TIER1
      - DC_TIER2
      - DC_SOLAR
      - DELAWARE_NEW
      - OHIO_RES
      - OHIO_SOLAR_RES
      - CONNECTICUT_CLM
      - CONNECTICUT_CHP
      - MISSOURI
      - DELAWARE_SOLAR
      - NORTH_CAROLINA
      - NC_IN-STATE
      - NC_NEW
      - NC_S886_10
      - NC_S886_20
      - NC_S886_N
      - NEW_YORK
      - KANSAS
      - WV_RENEWABLE_ENERGY_RESOURCE
      - WV_ALTERNATIVE_ENERGY_RESOURCE
      - VIRGINIA
      - NYGATS_ZEC
      - NYGATS_TIER_1
      - NYGATS_IMPORT_TYPE_EDD
      - NYGATS_IMPORT_TYPE_NA
      - NYGATS_IMPORT_TYPE_BUN
      - NYGATS_IMPORT_TYPE_UNB
      - VERMONT_TIER1
      - VERMONT_TIER2
      - CT_CLASS_I_FERC
      - MA_CES
      - MA_CES_E
      - NH_CLASS_I_BIODIESEL_PRODUCER
      type: string
    RecTransfer:
      type: object
    Registry:
      properties:
        code:
          type: string
        type:
          type: string
      title: Registry object
      type: object
    RegistryCredential:
      properties:
        accountName:
          type: string
        emaAccountIdentifier:
          type: string
        enabled:
          type: boolean
        hasCredentials:
          type: boolean
        id:
          format: int64
          type: integer
        password:
          type: string
        phoneNumber:
          type: string
        registry:
          $ref: '#/components/schemas/Registry'
        registryAccountId:
          type: string
        registryAccountName:
          type: string
        registryApiAccountId:
          type: string
        registryApiKey:
          type: string
        username:
          type: string
      title: Registry credential object
      type: object
    RegistryCredentialsView:
      properties:
        links:
          items:
            $ref: '#/components/schemas/RegistryCredential'
          type: array
        pjmDownloadCredentials:
          $ref: '#/components/schemas/PjmDownloadCredentials'
      title: Registry credential view response
      type: object
    RegistryExportResult:
      type: object
    RegistryImportResult:
      type: object
    RoleEntitlement:
      properties:
        code:
          description: Role code
          type: string
        description:
          description: Role description
          type: string
        id:
          description: Role id
          format: int64
          type: integer
        name:
          description: Role name
          type: string
        roleType:
          description: Role type
          enum:
          - SYSTEM_ROLE
          - BUSINESS_ROLE
      type: object
    SIPSearchRequest:
      properties:
        accountIdentifier:
          type: string
        tradeId:
          type: string
        tradingDayFrom:
          type: string
        tradingDayTo:
          type: string
    SIPTrade:
      properties:
        buyer_account_id:
          description: SIP Buyer Account Id.
          type: string
        currency:
          description: The currency of the transaction.
          type: string
        price:
          description: Selling Price for Quantity in CBL.
          format: float
          type: number
        product_id:
          description: The External Code of the Instrument/product.
          type: string
        quantity:
          description: The quantity to be sold. Can not be a float value.
          format: int32
          type: integer
        seller_account_id:
          description: SIP Seller Account Id.
          type: string
        trade_id:
          description: Unique Id sent by CBL.
          type: string
        trade_type:
          description: The trade type (SPO or Standard).
          type: string
        transaction_id:
          description: Transaction Id shared by IHS on Listing Credits.
          type: string
      required:
      - trade_id
      - seller_account_id
      - buyer_account_id
      - product_id
      - quantity
      title: SIP Trade data
      type: object
    SIPTransaction:
      properties:
        emaAccountIdentifier:
          type: string
        emaTxIdentifier:
          type: string
        emaTxStatus:
          type: string
        encumbranceOperationId:
          format: int64
          type: integer
        instrument:
          type: string
        marketModelInstrument:
          format: int64
          type: string
        positionToSettleId:
          format: int64
          type: integer
        priority:
          format: int64
          type: integer
        program:
          type: string
        projectName:
          type: string
        qty:
          format: int64
          type: integer
        registryTxMessage:
          type: string
        registryTxStatus:
          type: string
        tradeActionType:
          type: string
        tradeId:
          type: string
        tradingDay:
          type: string
        upn:
          type: string
    SelectPjmCredential:
      properties:
        registryCredentialId:
          format: int64
          type: integer
      required:
      - registryCredentialId
      title: Request to select pjm download credential for use
      type: object
    SettlementDetails:
      properties:
        accountId:
          format: int64
          type: integer
        executionVenueId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        marketModelInstrumentId:
          format: int64
          type: integer
        quantity:
          format: int64
          type: integer
        registry:
          type: string
    SpotPositionsResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/v1.Instrument'
          type: array
        summary:
          $ref: '#/components/schemas/ListSummary'
      required:
      - summary
      - items
      type: object
    SpringBean:
      properties:
        cacheName:
          type: string
        cacheSize:
          format: int32
          type: integer
        class:
          type: string
        description:
          type: string
        id:
          type: string
        interfaceNamesList:
          items:
            type: string
          type: array
        uiMethods:
          items:
            $ref: '#/components/schemas/UIMethod'
          type: array
      type: object
    SpringBeansList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SpringBean'
          type: array
      type: object
    Status:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            type: string
          type: array
        message:
          type: string
      type: object
    SubAccount:
      properties:
        account:
          $ref: '#/components/schemas/Account'
        retirementLocation:
          $ref: '#/components/schemas/AdministrativeArea1'
        subAccountId:
          type: string
      type: object
    TimeRange:
      properties:
        end:
          format: date-time
          title: inclusive
          type: string
        start:
          format: date-time
          title: inclusive
          type: string
      type: object
    TransferKey:
      type: object
    UIMethod:
      properties:
        description:
          type: string
        name:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/ParameterInfo'
          type: array
        returnType:
          type: string
      type: object
    Workflow:
      properties:
        Status:
          type: string
        closingTime:
          format: date-time
          type: string
        id:
          type: string
        runId:
          type: string
        startTime:
          format: date-time
          type: string
        type:
          type: string
        wfStatus:
          $ref: '#/components/schemas/WorkflowStatus'
      type: object
    WorkflowStatus:
      default: WF_STATUS_STARTED
      enum:
      - WF_STATUS_STARTED
      - WF_STATUS_FINISHED
      - WF_STATUS_FAILED
      type: string
    WorkflowsList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Workflow'
          type: array
      type: object
    WorkflowsSearchCriteria:
      properties:
        emaId:
          type: string
        startTimeLimits:
          $ref: '#/components/schemas/TimeRange'
        workflowType:
          type: string
      type: object
    v1.Instrument:
      properties:
        creditType:
          type: string
        description:
          type: string
        ein:
          type: string
        instrumentId:
          type: string
        program:
          type: string
        project:
          $ref: '#/components/schemas/v1.Project'
        vintage:
          type: string
      title: Instrument details
      type: object
    v1.InstrumentSearchRequest:
      properties:
        ein:
          type: string
      type: object
    v1.Project:
      properties:
        projectName:
          type: string
        registryAssignedId:
          type: string
        upn:
          type: string
      title: Project summary
      type: object
externalDocs:
  description: Find out more about EMA
  url: https://xpansiv.com/
info:
  contact:
    email: kignatyev@xpansiv.com
    name: Xpansiv Inc.
    url: https://xpansiv.com/
  description: see more https://xpansivhq.atlassian.net/wiki/spaces/AEM/pages/1872298014/EMA+Admin+API
  license:
    name: BSD 3-Clause License
    url: https://opensource.org/licenses/BSD-3-Clause
  title: EMA Admin
  version: 1.0.11
openapi: 3.0.1
paths:
  /EMARegistryService/addRecPrograms:
    post:
      operationId: EMARegistryService_addRecPrograms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecProgramCode'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecProgramCode'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMARegistryService
  /account/{accountId}/import:
    post:
      operationId: EMARegistryService_ImportRegistryData
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                activePositions:
                  items:
                    $ref: '#/components/schemas/RecPosition'
                  type: array
                knownTransferKeys:
                  items:
                    $ref: '#/components/schemas/TransferKey'
                  type: array
                retiredPositions:
                  items:
                    $ref: '#/components/schemas/RecPosition'
                  type: array
                subAccounts:
                  items:
                    $ref: '#/components/schemas/SubAccount'
                  type: array
                transfers:
                  items:
                    $ref: '#/components/schemas/RecTransfer'
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryImportResult'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMARegistryService
  /account/{accountId}/portfolio:
    post:
      operationId: EMARegistryService_ListPositions
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryExportResult'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMARegistryService
  /account/{accountId}/registry/export:
    post:
      operationId: EMARegistryService_UpdateRegistry
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryExportResult'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMARegistryService
  /credentials/disable:
    post:
      operationId: disableRegistryCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableDisableRegistryCredential'
        required: true
      responses:
        '200':
          description: success response
      summary: disable registry credential
      tags:
      - registry-credentials
  /credentials/enable:
    post:
      operationId: enableRegistryCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableDisableRegistryCredential'
        required: true
      responses:
        '200':
          description: success response
      summary: enable registry credential
      tags:
      - registry-credentials
  /credentials/list:
    post:
      operationId: listRegistryCredentials
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryCredentialsView'
          description: success response
      summary: list registry credentials and pjm download credentials
      tags:
      - registry-credentials
  /credentials/pjmCredentials:
    post:
      operationId: selectPjmDownloadCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectPjmCredential'
        required: true
      responses:
        '200':
          description: success response
      summary: select pjm download credential to be used for login and account holder
        sync
      tags:
      - registry-credentials
  /credentials/update:
    post:
      operationId: createOrUpdateRegistryCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryCredential'
        required: true
      responses:
        '200':
          description: success response
      summary: create or update existing registry credential
      tags:
      - registry-credentials
  /data/rec-program:
    get:
      operationId: EMARegistryService_ListAvailableRecPrograms
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecPrograms'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMARegistryService
  /ema-admin/feature-flags/{id}:
    put:
      operationId: EMAAdminService_SetFeatureFlag
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enabled:
                  type: boolean
                name:
                  title: optional name
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMAAdminService
      x-codegen-request-body-name: body
  /ema-admin/spring-beans/action/list:
    post:
      operationId: EMAAdminService_ListSpringBeans
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpringBeansList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMAAdminService
      x-codegen-request-body-name: body
  /ema-admin/workflows/action/list:
    post:
      operationId: EMAAdminService_ListWorkflows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowsSearchCriteria'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowsList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMAAdminWorkflows
      x-codegen-request-body-name: body
  /ercot/cache/jwt:
    get:
      operationId: listErcotJwtCache
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ErcotJwtCacheItem'
                type: array
          description: List ERCOT JWT Cache successfully executed
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      summary: Get all ERCOT JWT from cache
      tags:
      - ERCOT JWT Cache
    post:
      operationId: store JWT token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErcotJwtCacheItem'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErcotJwtCacheItem'
          description: Settlement successfully executed
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      summary: Add ERCOT JWT to cache
      tags:
      - ERCOT JWT Cache
  /ercot/cache/jwt/delete:
    post:
      operationId: deleteErcotJwtCache
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErcotJwtCacheItem'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErcotJwtCacheItem'
          description: Settlement successfully executed
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      summary: Delete ERCOT JWT from cache
      tags:
      - ERCOT JWT Cache
  /feature-flags/action/list:
    post:
      operationId: EMAAdminService_ListFeatureFlags
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagsList'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      tags:
      - EMAAdminService
      x-codegen-request-body-name: body
  /generators:
    get:
      operationId: listGenerators
      parameters:
      - description: Filter by RecProgram
        in: query
        name: recProgram
        schema:
          $ref: '#/components/schemas/RecProgram'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecGeneratorsResponse'
          description: success response
      summary: list generators
      tags:
      - generator
    post:
      operationId: createOrUpdateGenerator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecGenerator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecGenerator'
          description: success response
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecGenerator'
          description: new generator is created
      summary: create or update generator
      tags:
      - generator
  /generators/{recProgram}/{registryAssignedId}:
    get:
      operationId: getGenerator
      parameters:
      - in: path
        name: recProgram
        required: true
        schema:
          $ref: '#/components/schemas/RecProgram'
      - in: path
        name: registryAssignedId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecGenerator'
          description: success response
      summary: find generator by REC program and registry assigned ID
      tags:
      - generator
  /generators/{recProgram}/{registryAssignedId}/inactivate:
    post:
      operationId: inactivateGenerator
      parameters:
      - in: path
        name: recProgram
        required: true
        schema:
          $ref: '#/components/schemas/RecProgram'
      - in: path
        name: registryAssignedId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecGenerator'
          description: success response
      summary: inactivate generator by REC program and registry assigned ID
      tags:
      - generator
  /group:
    get:
      operationId: getGroups
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupEntitlement'
                type: array
          description: Settlement successfully executed
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Get all group entitlements
      tags:
      - Groups
    post:
      operationId: save group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupEntitlement'
        description: Group data
        required: true
      responses:
        '200':
          $ref: '#/components/responses/GeneralResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Create/Update Group Entitlement
      tags:
      - Groups
  /group/{groupEntlId}/add/entitlement:
    post:
      operationId: add entitlement to group
      parameters:
      - description: Group entitlement id
        in: path
        name: groupEntlId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entitlement'
        description: Group data
        required: true
      responses:
        '200':
          $ref: '#/components/responses/GeneralResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Create/Update Group Entitlement
      tags:
      - Groups
  /portfolio/{accountId}/spot-positions:
    post:
      operationId: EMAPortfolioService_listSpotPositions
      parameters:
      - $ref: '#/components/parameters/AccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotPositionsResponse'
          description: success response
      summary: list spot positions
      tags:
      - EMAPortfolioService
  /project:
    post:
      operationId: saveProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarbonProject'
        description: Project object to be added/updated
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarbonProject'
          description: Returns project
      summary: Creates or update project
      tags:
      - project
  /public/config:
    get:
      operationId: CommonDefinitions_getPublicConfig
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KVPair'
                type: array
          description: success response
      summary: list public configurations
      tags:
      - CommonDefinitions
  /rest/sip/v2/settlement:
    post:
      operationId: executeSettlement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIPTrade'
        description: Trade data
        required: true
      responses:
        '200':
          $ref: '#/components/responses/GeneralResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Performs EMA SIP Settlement based on trade data
      tags:
      - SIPSettlements
  /role:
    get:
      operationId: getRoles
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleEntitlement'
                type: array
          description: Settlement successfully executed
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Get all role entitlements
      tags:
      - Roles
    post:
      operationId: save role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleEntitlement'
        description: Group data
        required: true
      responses:
        '200':
          $ref: '#/components/responses/GeneralResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Create/Update Group Entitlement
      tags:
      - Roles
  /v1/instrument/search:
    post:
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1.InstrumentSearchRequest'
        description: Instrument Details request
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Instrument'
          description: success response
      summary: list instrument details with project summary
      tags:
      - instrument
  /v1/sip/settlement:
    post:
      operationId: executeSIPSettlement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIPTrade'
        description: Trade data
        required: true
      responses:
        '200':
          $ref: '#/components/responses/GeneralResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Performs EMA SIP Settlement based on trade data
      tags:
      - SIPSettlements
  /v1/sip/settlement/search:
    post:
      operationId: searchSettlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIPSearchRequest'
        description: Settlement search data request
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SettlementDetails'
                type: array
          description: Success
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Settlement search
      tags:
      - SIPSettlements
  /v1/sip/transaction/search:
    post:
      operationId: searchTransactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIPSearchRequest'
        description: Settlement search data request
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SIPTransaction'
                type: array
          description: SIP Transaction search successfully executed
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - basicAuth: []
      summary: Settlement search
      tags:
      - SIPTransactions
servers:
- url: /api/v1
- url: http://ema.xpansiv.com/v1
- url: /api/v1/common
tags:
- name: EMAAdminService
  x-displayName: EMAAdminService
- name: EMAAdminWorkflows
  x-displayName: EMAAdminWorkflows
- description: Carbon projects
  name: project
  x-displayName: project
- name: CommonDefinitions
  x-displayName: CommonDefinitions
- name: instrument
  x-displayName: instrument
- name: EMAPortfolioService
  x-displayName: EMAPortfolioService
- name: generator
  x-displayName: generator
- name: EMARegistryService
  x-displayName: EMARegistryService
- name: registry-credentials
  x-displayName: registry-credentials
- description: SIP Settlements
  name: SIPSettlements
  x-displayName: SIPSettlements
- description: SIP Transactions
  name: SIPTransactions
  x-displayName: SIPTransactions
- description: ERCOT JWT Cache Management
  name: ERCOT JWT Cache
  x-displayName: ERCOT JWT Cache
- name: Groups
  x-displayName: Groups
- name: Roles
  x-displayName: Roles
